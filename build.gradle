plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'net.momirealms'
version = '2.2.2.0'

repositories {
    maven {name = "aliyun-repo"; url = "https://maven.aliyun.com/repository/public/"}
    maven {name = 'sonatype'; url = 'https://oss.sonatype.org/content/groups/public/'}
    maven {name = "dmulloy2-repo"; url = "https://repo.dmulloy2.net/repository/public/"}
    maven {name = "clip-repo"; url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'}
    maven {name = "jitpack"; url = 'https://jitpack.io'}
    maven {name = "codecrafter47-repo"; url = 'https://nexus.codecrafter47.de/content/repositories/public/'}
    maven {name = "opencollab-snapshot-repo"; url = 'https://repo.opencollab.dev/main/'}
    maven {name = 'papermc-repo'; url = 'https://papermc.io/repo/repository/maven-public/'}
    mavenLocal()
}

dependencies {
    compileOnly fileTree(dir:'libs',includes:['*.jar'])
    compileOnly ('io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT')
    compileOnly ('me.clip:placeholderapi:2.11.3')
    compileOnly ('commons-io:commons-io:2.11.0')
    compileOnly ('dev.dejvokep:boosted-yaml:1.3')
    compileOnly ('com.github.LoneDev6:api-itemsadder:3.4.1-r4')
    implementation ('net.kyori:adventure-api:4.14.0')
    implementation ('net.kyori:adventure-platform-bukkit:4.3.0')
    implementation ('net.kyori:adventure-text-minimessage:4.14.0')
    implementation ('net.kyori:adventure-text-serializer-gson:4.14.0')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

tasks.withType(JavaCompile).configureEach {
    options.release = targetJavaVersion
    options.encoding = "UTF-8"
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate ('net.kyori', 'net.momirealms.customnameplates.libs.net.kyori')
}

tasks.register("delete", Delete).get().delete("build/libs/"+project.name+"-"+project.version+".jar")
tasks.named("build").get().dependsOn("shadowJar").finalizedBy("delete").doLast {
    println("Deleting: "+ "build/libs/"+project.name+"-"+project.version+".jar")
}